// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stack.DAL;

namespace Stack.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220102121802_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Auth.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NameAR")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("NameEN")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Action", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Actions");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CostCenterID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<long?>("ManagerID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("ApplicationUserID")
                        .IsUnique()
                        .HasFilter("[ApplicationUserID] IS NOT NULL");

                    b.HasIndex("CostCenterID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.EmployeeAddress", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(70)");

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<string>("Governorate")
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("OtherInfo")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(70)");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("EmployeeAddresses");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.EmployeeGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("EmployeeGroup");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.EmployeeSubGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EmployeeGroupID")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeGroupID");

                    b.ToTable("EmployeeSubGroup");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_Action", b =>
                {
                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<int>("ActionID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeID", "ActionID");

                    b.HasIndex("ActionID");

                    b.ToTable("Employee_Action");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_PhoneNumber", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(70)");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Employee_PhoneNumbers");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_Position", b =>
                {
                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeID", "PositionID");

                    b.HasIndex("PositionID");

                    b.ToTable("Employee_Position");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_SubGroup", b =>
                {
                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<int>("SubGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeID", "SubGroupID");

                    b.HasIndex("SubGroupID");

                    b.ToTable("Employee_SubGroup");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Position", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrgUnitID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("OrgUnitID");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.PositionAssignment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<string>("EmployeeNameAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EmployeeNameEN")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PositionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("PositionID");

                    b.ToTable("PositionAssignment");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Material", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EAN")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("LeadTime")
                        .HasColumnType("real");

                    b.Property<int>("MaterialGroupID")
                        .HasColumnType("int");

                    b.Property<int>("MaterialTypeID")
                        .HasColumnType("int");

                    b.Property<float>("MaxStock")
                        .HasColumnType("real");

                    b.Property<float>("MinimumOrderAmount")
                        .HasColumnType("real");

                    b.Property<float>("MovingAverage")
                        .HasColumnType("real");

                    b.Property<string>("PriceIndicator")
                        .HasColumnType("varchar(1)");

                    b.Property<float>("ReOrderPoint")
                        .HasColumnType("real");

                    b.Property<float>("SafetyStock")
                        .HasColumnType("real");

                    b.Property<float>("StandardPrice")
                        .HasColumnType("real");

                    b.Property<long>("Stock")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("MaterialGroupID");

                    b.HasIndex("MaterialTypeID");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.MaterialGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("MaterialGroup");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.MaterialType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("MaterialType");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Material_UOM", b =>
                {
                    b.Property<long>("MaterialID")
                        .HasColumnType("bigint");

                    b.Property<int>("UOMID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("MaterialID", "UOMID");

                    b.HasIndex("UOMID");

                    b.ToTable("Material_UOM");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Plant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("CompanyCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCodeID");

                    b.ToTable("Plant");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Plant_Material", b =>
                {
                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.Property<long>("MaterialID")
                        .HasColumnType("bigint");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("PlantID", "MaterialID");

                    b.HasIndex("MaterialID");

                    b.ToTable("Plant_Material");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.StorageLocation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("PlantID");

                    b.ToTable("StorageLocation");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.UOM", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("UOM");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.CompanyCode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("CompanyCodes");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.CostCenter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCodeID");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.Employee_PurchasingGroup", b =>
                {
                    b.Property<long>("EmployeeID")
                        .HasColumnType("bigint");

                    b.Property<int>("PurchasingGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeID", "PurchasingGroupID");

                    b.HasIndex("PurchasingGroupID");

                    b.ToTable("Employee_PurchasingGroup");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.ExchangeRate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstCurrency")
                        .HasColumnType("varchar(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("SecondCurrency")
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime?>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCodeID");

                    b.ToTable("ExchangeRates");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.GLAccount", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ControllingArea")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MaterialGroupID")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("MaterialGroupID");

                    b.ToTable("GLAccounts");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.OrgUnit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPurchasing")
                        .HasColumnType("bit");

                    b.Property<long>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCodeID");

                    b.ToTable("OrgUnits");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.ProfitCenter", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("CompanyCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("CompanyCodeID");

                    b.ToTable("ProfitCenters");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.PurchasingGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("PlantID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("PlantID");

                    b.ToTable("PurchasingGroups");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.Condition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Level")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PR", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PRTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("PRTypeID");

                    b.ToTable("PRS");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PRMainItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LineItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("MaterialDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MaterialDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MaterialGroupDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MaterialGroupDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("MaterialGroupID")
                        .HasColumnType("int");

                    b.Property<long>("MaterialID")
                        .HasColumnType("bigint");

                    b.Property<long>("PRID")
                        .HasColumnType("bigint");

                    b.Property<string>("PlantDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PlantDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.Property<string>("PurchasingGroupDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PurchasingGroupDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PurchasingGroupID")
                        .HasColumnType("int");

                    b.Property<string>("TypeIndicator")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UOMAbbreviation")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UOMID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.Property<float>("ValuationPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("PRID");

                    b.ToTable("PRMainItems");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PRMainItem_Condition", b =>
                {
                    b.Property<int>("ConditionID")
                        .HasColumnType("int");

                    b.Property<long>("PRMainItemID")
                        .HasColumnType("bigint");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Per")
                        .HasColumnType("varchar(10)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("TotalValue")
                        .HasColumnType("real");

                    b.HasKey("ConditionID", "PRMainItemID");

                    b.HasIndex("PRMainItemID");

                    b.ToTable("PRMainItem_Condition");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PRSubItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LineItemNumber")
                        .HasColumnType("int");

                    b.Property<long>("PRMainItemID")
                        .HasColumnType("bigint");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<string>("ServiceDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ServiceDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<long>("ServiceID")
                        .HasColumnType("bigint");

                    b.Property<string>("UOMAbbreviation")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UOMID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("PRMainItemID");

                    b.ToTable("PRSubItem");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PRType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("PRTypes");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQ", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RFQTypeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("VendorID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("RFQTypeID");

                    b.HasIndex("VendorID");

                    b.ToTable("RFQS");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQMainItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LineItemNumber")
                        .HasColumnType("int");

                    b.Property<string>("MaterialDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MaterialDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MaterialGroupDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("MaterialGroupDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("MaterialGroupID")
                        .HasColumnType("int");

                    b.Property<long>("MaterialID")
                        .HasColumnType("bigint");

                    b.Property<string>("PlantDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PlantDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.Property<string>("PurchasingGroupDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PurchasingGroupDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("PurchasingGroupID")
                        .HasColumnType("int");

                    b.Property<long>("RFQID")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeIndicator")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UOMAbbreviation")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UOMID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.Property<float>("ValuationPrice")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("RFQID");

                    b.ToTable("RFQMainItems");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQMainItem_Condition", b =>
                {
                    b.Property<long>("RFQMainItemID")
                        .HasColumnType("bigint");

                    b.Property<int>("ConditionID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Per")
                        .HasColumnType("varchar(10)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("TotalValue")
                        .HasColumnType("real");

                    b.HasKey("RFQMainItemID", "ConditionID");

                    b.HasIndex("ConditionID");

                    b.ToTable("RFQMainItem_Condition");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQSubItem", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("varchar(3)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LineItemNumber")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<long>("RFQMainItemID")
                        .HasColumnType("bigint");

                    b.Property<string>("ServiceDescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ServiceDescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<long>("ServiceID")
                        .HasColumnType("bigint");

                    b.Property<string>("UOMAbbreviation")
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UOMID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("RFQMainItemID");

                    b.ToTable("RFQSubItems");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("RFQTypes");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Bank", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Tax", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionAR")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("DescriptionEN")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<float>("Percentage")
                        .HasColumnType("real");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Vendor", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAR")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NameEN")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SystemUsername")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TaxRegistrationNumber")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.VendorAddress", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Governorate")
                        .HasColumnType("varchar(70)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OtherInfo")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Street")
                        .HasColumnType("varchar(70)");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("VendorID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("VendorID");

                    b.ToTable("VendorAddresses");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.VendorEmail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("VendorID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("VendorID");

                    b.ToTable("VendorEmails");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.VendorPhoneNumber", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Number")
                        .HasColumnType("varchar(16)");

                    b.Property<DateTime>("Update_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Updated_By")
                        .HasColumnType("varchar(255)");

                    b.Property<long>("VendorID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("VendorID");

                    b.ToTable("VendorPhoneNumbers");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Vendor_Bank", b =>
                {
                    b.Property<long>("VendorID")
                        .HasColumnType("bigint");

                    b.Property<int>("BankID")
                        .HasColumnType("int");

                    b.Property<string>("AccountID")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("IBAN")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SwiftCode")
                        .HasColumnType("varchar(10)");

                    b.HasKey("VendorID", "BankID");

                    b.HasIndex("BankID");

                    b.ToTable("Vendor_Bank");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Vendor_CompanyCode", b =>
                {
                    b.Property<long>("VendorID")
                        .HasColumnType("bigint");

                    b.Property<int>("CompanyCodeID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("VendorID", "CompanyCodeID");

                    b.HasIndex("CompanyCodeID");

                    b.ToTable("Vendor_CompanyCode");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Vendor_Tax", b =>
                {
                    b.Property<long>("VendorID")
                        .HasColumnType("bigint");

                    b.Property<int>("TaxID")
                        .HasColumnType("int");

                    b.Property<string>("Created_By")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.HasKey("VendorID", "TaxID");

                    b.HasIndex("TaxID");

                    b.ToTable("Vendor_Tax");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Auth.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Auth.ApplicationUser", "ApplicationUser")
                        .WithOne("Employee")
                        .HasForeignKey("Stack.Entities.Models.Modules.Employees.Employee", "ApplicationUserID");

                    b.HasOne("Stack.Entities.Models.Modules.Organizations.CostCenter", "CostCenter")
                        .WithMany("Employees")
                        .HasForeignKey("CostCenterID");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.EmployeeAddress", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.Employee", "Employee")
                        .WithMany("Addresses")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.EmployeeSubGroup", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.EmployeeGroup", "EmployeeGroup")
                        .WithMany("SubGroups")
                        .HasForeignKey("EmployeeGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_Action", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.Action", "Action")
                        .WithMany("Employee_Actions")
                        .HasForeignKey("ActionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Employees.Employee", "Employee")
                        .WithMany("Employee_Actions")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_PhoneNumber", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.Employee", "Employee")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_Position", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.Employee", "Employee")
                        .WithMany("Employee_Positions")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Employees.Position", "Position")
                        .WithMany("Position_Employees")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Employee_SubGroup", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.Employee", "Employee")
                        .WithMany("Employee_SubGroups")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Employees.EmployeeSubGroup", "SubGroup")
                        .WithMany("SubGroup_Employees")
                        .HasForeignKey("SubGroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.Position", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Organizations.OrgUnit", "OrgUnit")
                        .WithMany("Positions")
                        .HasForeignKey("OrgUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Employees.PositionAssignment", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.Position", "Position")
                        .WithMany("PositionAssignments")
                        .HasForeignKey("PositionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Material", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Materials.MaterialGroup", "MaterialGroup")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Materials.MaterialType", "MaterialType")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Material_UOM", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Materials.Material", "Material")
                        .WithMany("Material_UOMS")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Materials.UOM", "UOM")
                        .WithMany("UOM_Materials")
                        .HasForeignKey("UOMID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Plant", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Organizations.CompanyCode", "CompanyCode")
                        .WithMany("Plants")
                        .HasForeignKey("CompanyCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.Plant_Material", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Materials.Material", "Material")
                        .WithMany("Material_Plants")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Materials.Plant", "Plant")
                        .WithMany("Plant_Materials")
                        .HasForeignKey("PlantID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Materials.StorageLocation", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Materials.Plant", "Plant")
                        .WithMany()
                        .HasForeignKey("PlantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.CostCenter", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Organizations.CompanyCode", "CompanyCode")
                        .WithMany("CostCenters")
                        .HasForeignKey("CompanyCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.Employee_PurchasingGroup", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Employees.Employee", "Employee")
                        .WithMany("Employee_PurchasingGroups")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Organizations.PurchasingGroup", "PurchasingGroup")
                        .WithMany("PurchasingGroup_Employees")
                        .HasForeignKey("PurchasingGroupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.ExchangeRate", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Organizations.CompanyCode", "CompanyCode")
                        .WithMany()
                        .HasForeignKey("CompanyCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.GLAccount", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Materials.MaterialGroup", "MaterialGroup")
                        .WithMany("GLAccounts")
                        .HasForeignKey("MaterialGroupID");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.OrgUnit", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Organizations.CompanyCode", "CompanyCode")
                        .WithMany()
                        .HasForeignKey("CompanyCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.ProfitCenter", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Organizations.CompanyCode", "CompanyCode")
                        .WithMany()
                        .HasForeignKey("CompanyCodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Organizations.PurchasingGroup", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Materials.Plant", "Plant")
                        .WithMany("PurchasingGroup")
                        .HasForeignKey("PlantID");
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PR", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.PRS.PRType", "PRType")
                        .WithMany("PRS")
                        .HasForeignKey("PRTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PRMainItem", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.PRS.PR", "PR")
                        .WithMany()
                        .HasForeignKey("PRID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PRMainItem_Condition", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.PRS.Condition", "Condition")
                        .WithMany("Condition_PRMainItems")
                        .HasForeignKey("ConditionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.PRS.PRMainItem", "PRMainItem")
                        .WithMany("MainItem_Conditions")
                        .HasForeignKey("PRMainItemID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.PRS.PRSubItem", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.PRS.PRMainItem", "PRMainItem")
                        .WithMany("SubItems")
                        .HasForeignKey("PRMainItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQ", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.RFQS.RFQType", "RFQType")
                        .WithMany("RFQS")
                        .HasForeignKey("RFQTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Vendor", "Vendor")
                        .WithMany("RFQS")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQMainItem", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.RFQS.RFQ", "RFQ")
                        .WithMany()
                        .HasForeignKey("RFQID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQMainItem_Condition", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.PRS.Condition", "Condition")
                        .WithMany("Condition_RFQMainItems")
                        .HasForeignKey("ConditionID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.RFQS.RFQMainItem", "RFQMainItem")
                        .WithMany("MainItem_Conditions")
                        .HasForeignKey("RFQMainItemID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.RFQS.RFQSubItem", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.RFQS.RFQMainItem", "RFQMainItem")
                        .WithMany("SubItems")
                        .HasForeignKey("RFQMainItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.VendorAddress", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Vendor", "Vendor")
                        .WithMany("VendorAddresses")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.VendorEmail", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Vendor", "Vendor")
                        .WithMany("VendorEmails")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.VendorPhoneNumber", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Vendor", "Vendor")
                        .WithMany("VendorPhoneNumbers")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Vendor_Bank", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Bank", "Bank")
                        .WithMany("Bank_Vendors")
                        .HasForeignKey("BankID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Vendor", "Vendor")
                        .WithMany("Vendor_Banks")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Vendor_CompanyCode", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Organizations.CompanyCode", "CompanyCode")
                        .WithMany("CompanyCode_Vendors")
                        .HasForeignKey("CompanyCodeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Vendor", "Vendor")
                        .WithMany("Vendor_CompanyCodes")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Stack.Entities.Models.Modules.Vendors.Vendor_Tax", b =>
                {
                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Tax", "Tax")
                        .WithMany("Tax_Vendors")
                        .HasForeignKey("TaxID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Stack.Entities.Models.Modules.Vendors.Vendor", "Vendor")
                        .WithMany("Vendor_Taxes")
                        .HasForeignKey("VendorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
